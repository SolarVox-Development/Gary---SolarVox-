name: Discord Repository Updates

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, closed, reopened, merged]
  issues:
    types: [opened, closed, reopened]
  fork:
  watch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:

      # -----------------------------
      # Push Event
      # -----------------------------
      - name: Prepare Push Embed
        if: github.event_name == 'push'
        run: |
          mkdir -p temp
          COMMIT_MSG=$(echo "${GITHUB_EVENT_PATH}" | jq -r '.head_commit.message')
          COMMIT_ID=$(echo "${GITHUB_SHA}")
          COMMIT_URL="https://github.com/${GITHUB_REPOSITORY}/commit/${COMMIT_ID}"
          cat <<EOF > temp/payload.json
          {
            "embeds": [
              {
                "title": "üöÄ Push to ${GITHUB_REPOSITORY}",
                "color": 3066993,
                "fields": [
                  {"name": "Branch", "value": "${GITHUB_REF_NAME}", "inline": true},
                  {"name": "Pusher", "value": "${GITHUB_ACTOR}", "inline": true},
                  {"name": "Commit", "value": "[${COMMIT_ID}](${COMMIT_URL})", "inline": false},
                  {"name": "Message", "value": "${COMMIT_MSG}", "inline": false}
                ],
                "timestamp": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
              }
            ]
          }
          EOF

      - name: Send Push Embed
        if: github.event_name == 'push'
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: "@temp/payload.json"

      # -----------------------------
      # Pull Request Event
      # -----------------------------
      - name: Prepare Pull Request Embed
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p temp
          PR_TITLE=$(jq -r '.pull_request.title' "$GITHUB_EVENT_PATH")
          PR_AUTHOR=$(jq -r '.pull_request.user.login' "$GITHUB_EVENT_PATH")
          PR_URL=$(jq -r '.pull_request.html_url' "$GITHUB_EVENT_PATH")
          PR_STATE=$(jq -r '.pull_request.state' "$GITHUB_EVENT_PATH")
          cat <<EOF > temp/payload.json
          {
            "embeds": [
              {
                "title": "üîÄ Pull Request in ${GITHUB_REPOSITORY}",
                "color": 3447003,
                "fields": [
                  {"name": "Title", "value": "${PR_TITLE}", "inline": false},
                  {"name": "Author", "value": "${PR_AUTHOR}", "inline": true},
                  {"name": "URL", "value": "${PR_URL}", "inline": true},
                  {"name": "State", "value": "${PR_STATE}", "inline": true}
                ],
                "timestamp": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
              }
            ]
          }
          EOF

      - name: Send Pull Request Embed
        if: github.event_name == 'pull_request'
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: "@temp/payload.json"

      # -----------------------------
      # Issues Event
      # -----------------------------
      - name: Prepare Issue Embed
        if: github.event_name == 'issues'
        run: |
          mkdir -p temp
          ISSUE_TITLE=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")
          ISSUE_AUTHOR=$(jq -r '.issue.user.login' "$GITHUB_EVENT_PATH")
          ISSUE_URL=$(jq -r '.issue.html_url' "$GITHUB_EVENT_PATH")
          ISSUE_STATE=$(jq -r '.issue.state' "$GITHUB_EVENT_PATH")
          cat <<EOF > temp/payload.json
          {
            "embeds": [
              {
                "title": "‚ùó Issue in ${GITHUB_REPOSITORY}",
                "color": 15158332,
                "fields": [
                  {"name": "Title", "value": "${ISSUE_TITLE}", "inline": false},
                  {"name": "Author", "value": "${ISSUE_AUTHOR}", "inline": true},
                  {"name": "URL", "value": "${ISSUE_URL}", "inline": true},
                  {"name": "State", "value": "${ISSUE_STATE}", "inline": true}
                ],
                "timestamp": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
              }
            ]
          }
          EOF

      - name: Send Issue Embed
        if: github.event_name == 'issues'
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: "@temp/payload.json"

      # -----------------------------
      # Fork Event
      # -----------------------------
      - name: Prepare Fork Embed
        if: github.event_name == 'fork'
        run: |
          mkdir -p temp
          cat <<EOF > temp/payload.json
          {
            "embeds": [
              {
                "title": "üç¥ Repository Forked",
                "color": 15844367,
                "fields": [
                  {"name": "Actor", "value": "${GITHUB_ACTOR}", "inline": true},
                  {"name": "Repository", "value": "${GITHUB_REPOSITORY}", "inline": true}
                ],
                "timestamp": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
              }
            ]
          }
          EOF

      - name: Send Fork Embed
        if: github.event_name == 'fork'
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: "@temp/payload.json"

      # -----------------------------
      # Star (Watch) Event
      # -----------------------------
      - name: Prepare Star Embed
        if: github.event_name == 'watch'
        run: |
          mkdir -p temp
          cat <<EOF > temp/payload.json
          {
            "embeds": [
              {
                "title": "‚≠ê Repository Starred",
                "color": 16776960,
                "fields": [
                  {"name": "Actor", "value": "${GITHUB_ACTOR}", "inline": true},
                  {"name": "Repository", "value": "${GITHUB_REPOSITORY}", "inline": true}
                ],
                "timestamp": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
              }
            ]
          }
          EOF

      - name: Send Star Embed
        if: github.event_name == 'watch'
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: "@temp/payload.json"
